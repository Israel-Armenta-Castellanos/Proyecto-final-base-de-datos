package fca.suayed.dal;

import fca.suayed.dao.StoreDao;
import fca.suayed.dto.ProductDto;
import fca.suayed.dto.ClientesDto;
import fca.suayed.dto.OrdenesDto;
import fca.suayed.dto.ResponseDto;
import fca.suayed.services.JdbiService;
import jakarta.enterprise.context.ApplicationScoped;
import jakarta.inject.Inject;
import org.jboss.logging.Logger;
import org.jdbi.v3.core.Jdbi;

import java.util.List;

@ApplicationScoped
public class StoreDal {

    private static final Logger LOGGER = Logger.getLogger(StoreDal.class);

    @Inject
    JdbiService jdbiService;

    public ResponseDto<List<ProductDto>> getProducts() {
        ResponseDto<List<ProductDto>> responseDto = new ResponseDto<>();
        responseDto.setSuccess(true);
        Jdbi jdbi = jdbiService.getInstance();
        var products = jdbi.withExtension(StoreDao.class, dao -> dao.getProducts());
        responseDto.setData(products);
        return responseDto;
    }

    public ResponseDto<String> addProduct(final ProductDto productDto) {
        ResponseDto<String> responseDto = new ResponseDto<>();
        responseDto.setSuccess(false);
        Jdbi jdbi = jdbiService.getInstance();
        jdbi.useExtension(StoreDao.class, dao -> {
            dao.addProduct(productDto);
            responseDto.setSuccess(true);
            responseDto.setData("ok");
        });
        return responseDto;
    }

    public ResponseDto<List<ClientesDto>> getClientes() {
        ResponseDto<List<ClientesDto>> responseDto = new ResponseDto<>();
        responseDto.setSuccess(true);
        Jdbi jdbi = jdbiService.getInstance();
        var clientes = jdbi.withExtension(StoreDao.class, dao -> dao.getClientes());
        responseDto.setData(clientes);
        return responseDto;
    }

    public ResponseDto<String> addClientes(final ClientesDto clientesDto) {
        ResponseDto<String> responseDto = new ResponseDto<>();
        responseDto.setSuccess(false);
        Jdbi jdbi = jdbiService.getInstance();
        jdbi.useExtension(StoreDao.class, dao -> {
            dao.addClientes(clientesDto);
            responseDto.setSuccess(true);
            responseDto.setData("ok");
        });
        return responseDto;
    }

    public ResponseDto<List<OrdenesDto>> getOrdenes() {
        ResponseDto<List<OrdenesDto>> responseDto = new ResponseDto<>();
        responseDto.setSuccess(true);
        Jdbi jdbi = jdbiService.getInstance();
        var ordenes = jdbi.withExtension(StoreDao.class, dao -> dao.getOrdenes());
        responseDto.setData(ordenes);
        return responseDto;
    }

    public ResponseDto<String> addOrdenes(final OrdenesDto ordenesDto) {
        ResponseDto<String> responseDto = new ResponseDto<>();
        responseDto.setSuccess(false);
        Jdbi jdbi = jdbiService.getInstance();
        jdbi.useExtension(StoreDao.class, dao -> {
            dao.addOrdenes(ordenesDto);
            responseDto.setSuccess(true);
            responseDto.setData("ok");
        });
        return responseDto;
    }
}
